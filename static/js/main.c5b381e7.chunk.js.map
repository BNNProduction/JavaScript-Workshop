{"version":3,"sources":["components/Form2.js","components/TodoList.js","components/Count.js","Quiz.js","reportWebVitals.js","index.js"],"names":["Form2","state","name","doKey1","doKey","bind","event","this","setState","target","value","props","onSayHi","type","onKeyUp","onClick","sayHi","Component","TodoList","clickTodo","todo","data","todos","map","isdone","id","Count","filter","all","length","Quiz","xyz","input","index","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MA2BiBA,E,kDAxBb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CAAEC,KAAM,IACrB,EAAKC,OAAS,EAAKC,MAAMC,KAAX,gBAHF,E,yCAMd,SAAMC,GACJC,KAAKC,SAAS,CAAEN,KAAMI,EAAMG,OAAOC,U,mBAGrC,WACEH,KAAKI,MAAMC,QAAQL,KAAKN,MAAMC,Q,oBAGhC,WAAU,IAAD,OACP,OACE,gCACE,uBAAOW,KAAK,OAAOC,QAASP,KAAKJ,SACjC,wBAAQY,QAAS,kBAAM,EAAKC,SAA5B,wB,GAnBUC,aC8BHC,E,kDA7Bb,aAAe,IAAD,8BACZ,gBACKC,UAAY,EAAKA,UAAUd,KAAf,gBAFL,E,6CAKd,SAAUe,GACPb,KAAKI,MAAMQ,UAAUC,K,oBAGxB,WAAU,IAAD,OAECC,EAAOd,KAAKI,MAAMW,MAAMC,KAAI,SAACH,GAE/B,OAAIA,EAAKI,OACE,mCAAK,oBAAmBT,QAAS,kBAAM,EAAKI,UAAUC,IAAjD,SACZ,4BAAIA,EAAKlB,QADYkB,EAAKK,OAKlB,mCAAK,oBAAmBV,QAAS,kBAAM,EAAKI,UAAUC,IAAjD,SACZA,EAAKlB,MADgBkB,EAAKK,UAMlC,OAAO,6BAAKJ,Q,GA1BEJ,aCkBRS,E,kDAjBb,WAAYf,GAAQ,uCACZA,G,0CAGR,WACE,IAAMU,EAAOd,KAAKI,MAAMW,MAAMK,QAC1B,SAAAP,GAAI,OAAqB,IAAjBA,EAAKI,UAEXI,EAAMrB,KAAKI,MAAMW,MAAMO,OAC7B,OACE,8BACGR,EAAKQ,OADR,qBACkCD,EADlC,gB,GAXcX,aC6CLa,E,kDAtCb,aAAe,IAAD,uBACZ,gBAJHR,MAAQ,GAKL,EAAKrB,MAAQ,CAAEqB,MAAO,IACtB,EAAKS,IAAM,EAAKA,IAAI1B,KAAT,gBACX,EAAKc,UAAY,EAAKA,UAAUd,KAAf,gBAJL,S,uCAUd,SAAI2B,GACFzB,KAAK0B,MAAQD,EAAMP,GAAK,EACxBlB,KAAKe,MAAMY,KAAM,CAAET,GAAIlB,KAAK0B,MAAO/B,KAAM8B,EAAOR,QAAQ,IACxDjB,KAAKC,SAAS,CAAEc,MAAOf,KAAKa,S,uBAI9B,SAAUA,GACJA,EAAKI,OACLJ,EAAKI,QAAS,EAEdJ,EAAKI,QAAS,EAElBjB,KAAKe,MAAMF,EAAKK,IAAML,EACtBb,KAAKC,SAAS,CAAEc,MAAOf,KAAKa,S,oBAG9B,WACE,OACE,gCACE,cAAC,EAAD,CAAOR,QAASL,KAAKwB,MACrB,cAAC,EAAD,CAAOT,MAAOf,KAAKe,QACnB,cAAC,EAAD,CAAUA,MAAOf,KAAKe,MAAOH,UAAaZ,KAAKY,mB,GArCpCF,aCQJkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c5b381e7.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nclass Form2 extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = { name: \"\" };\r\n      this.doKey1 = this.doKey.bind(this);\r\n    }\r\n  \r\n    doKey(event) {\r\n      this.setState({ name: event.target.value });\r\n    }\r\n  \r\n    sayHi() {\r\n      this.props.onSayHi(this.state.name);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <input type=\"text\" onKeyUp={this.doKey1} />\r\n          <button onClick={() => this.sayHi()}>Add</button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Form2;","import { Component } from \"react\";\r\n\r\nclass TodoList extends Component {\r\n    constructor() {\r\n      super();\r\n      this.clickTodo = this.clickTodo.bind(this);\r\n    }\r\n  \r\n    clickTodo(todo) {\r\n       this.props.clickTodo(todo);\r\n    }\r\n  \r\n    render() {\r\n    \r\n        const data = this.props.todos.map((todo) => {\r\n         \r\n            if (todo.isdone) {\r\n                return <ul> <li key={todo.id}  onClick={() => this.clickTodo(todo)}>\r\n                <s>{todo.name}</s>\r\n              </li></ul>\r\n            }\r\n            else{\r\n                return  <ul> <li key={todo.id}  onClick={() => this.clickTodo(todo)}>\r\n                {todo.name}\r\n              </li></ul>\r\n            }\r\n           \r\n        });\r\n         return <ul>{data}</ul>;\r\n    }\r\n  }\r\n  \r\n  export default TodoList;","import { Component } from \"react\";\r\n\r\nclass Count extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.todos.filter(\r\n        todo => todo.isdone ===  false\r\n      );\r\n    const all = this.props.todos.length;\r\n    return (\r\n      <p>\r\n        {data.length} remaining out of {all} tasks\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Count;","import { Component } from \"react\";\r\nimport Form2 from \"./components/Form2\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport Count from \"./components/Count\";\r\nclass Quiz extends Component {\r\n\r\n todos = [\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = { todos: [] };\r\n    this.xyz = this.xyz.bind(this);\r\n    this.clickTodo = this.clickTodo.bind(this);\r\n    var index = 0\r\n  }\r\n\r\n  // Callback\r\n \r\n  xyz(input) {\r\n    this.index = input.id + 1\r\n    this.todos.push( { id: this.index, name: input, isdone: false } )\r\n    this.setState({ todos: this.todo });\r\n    \r\n  }\r\n\r\n  clickTodo(todo){\r\n    if (todo.isdone) {\r\n        todo.isdone = false \r\n    }else{\r\n        todo.isdone = true \r\n    }\r\n    this.todos[todo.id] = todo\r\n    this.setState({ todos: this.todo });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form2 onSayHi={this.xyz} />\r\n        <Count todos={this.todos}/>\r\n        <TodoList todos={this.todos} clickTodo = {this.clickTodo}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\n//import App from './WorkApp';\n//import App from './components/Form2';\nimport App from './Quiz';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}